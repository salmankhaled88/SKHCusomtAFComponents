// Do not edit this file!
// This file has been automatically generated by ADF.
// 
package skh.adf.custom.components.html;

import oracle.adfinternal.view.faces.taglib.region.RichDeclarativeComponentTag;
import oracle.adf.view.rich.component.rich.fragment.RichDeclarativeComponent;
import org.apache.myfaces.trinidad.bean.FacesBean;
import org.apache.myfaces.trinidad.bean.PropertyKey;
import javax.el.ValueExpression;
import javax.servlet.jsp.JspException;

public class VerticalTrackerTag extends RichDeclarativeComponentTag {

  public VerticalTrackerTag() {
  }

  public String getComponentType() {
    return "skh.adf.custom.components.html.VerticalTrackerComponentType";
  }

  protected String getViewId() {
    return "/components/html/VerticalTracker.jspx";
  }

  protected RichDeclarativeComponent createComponent() {
    return new VerticalTrackerComponent();
  }

  public void setIterName(ValueExpression iterName) {
    this._iterName = iterName;
  }

  public void setCustomClass(ValueExpression customClass) {
    this._customClass = customClass;
  }

  public void setTitleAttrName(ValueExpression titleAttrName) {
    this._titleAttrName = titleAttrName;
  }

  public void setTitleClass(ValueExpression titleClass) {
    this._titleClass = titleClass;
  }

  public void setSubTitleAttrName(ValueExpression subTitleAttrName) {
    this._subTitleAttrName = subTitleAttrName;
  }

  public void setSubTitleClass(ValueExpression subTitleClass) {
    this._subTitleClass = subTitleClass;
  }

  public void setCircularAttrName(ValueExpression circularAttrName) {
    this._circularAttrName = circularAttrName;
  }

  public void setCircularClass(ValueExpression circularClass) {
    this._circularClass = circularClass;
  }

  public void setFlatDataAttrsNames(ValueExpression flatDataAttrsNames) {
    this._flatDataAttrsNames = flatDataAttrsNames;
  }


  protected void setProperties(FacesBean bean) {
    super.setProperties(bean);
    if (_iterName != null)
      bean.setValueExpression(_ITERNAME_KEY, _iterName);
    if (_customClass != null)
      bean.setValueExpression(_CUSTOMCLASS_KEY, _customClass);
    if (_titleAttrName != null)
      bean.setValueExpression(_TITLEATTRNAME_KEY, _titleAttrName);
    if (_titleClass != null)
      bean.setValueExpression(_TITLECLASS_KEY, _titleClass);
    if (_subTitleAttrName != null)
      bean.setValueExpression(_SUBTITLEATTRNAME_KEY, _subTitleAttrName);
    if (_subTitleClass != null)
      bean.setValueExpression(_SUBTITLECLASS_KEY, _subTitleClass);
    if (_circularAttrName != null)
      bean.setValueExpression(_CIRCULARATTRNAME_KEY, _circularAttrName);
    if (_circularClass != null)
      bean.setValueExpression(_CIRCULARCLASS_KEY, _circularClass);
    if (_flatDataAttrsNames != null)
      bean.setValueExpression(_FLATDATAATTRSNAMES_KEY, _flatDataAttrsNames);
  }

  public void release() {
    super.release();
    _iterName = null;
    _customClass = null;
    _titleAttrName = null;
    _titleClass = null;
    _subTitleAttrName = null;
    _subTitleClass = null;
    _circularAttrName = null;
    _circularClass = null;
    _flatDataAttrsNames = null;
  }

  private ValueExpression _iterName;
  private ValueExpression _customClass;
  private ValueExpression _titleAttrName;
  private ValueExpression _titleClass;
  private ValueExpression _subTitleAttrName;
  private ValueExpression _subTitleClass;
  private ValueExpression _circularAttrName;
  private ValueExpression _circularClass;
  private ValueExpression _flatDataAttrsNames;

  private static final PropertyKey _ITERNAME_KEY = PropertyKey.createPropertyKey("iterName");
  private static final PropertyKey _CUSTOMCLASS_KEY = PropertyKey.createPropertyKey("customClass");
  private static final PropertyKey _TITLEATTRNAME_KEY = PropertyKey.createPropertyKey("titleAttrName");
  private static final PropertyKey _TITLECLASS_KEY = PropertyKey.createPropertyKey("titleClass");
  private static final PropertyKey _SUBTITLEATTRNAME_KEY = PropertyKey.createPropertyKey("subTitleAttrName");
  private static final PropertyKey _SUBTITLECLASS_KEY = PropertyKey.createPropertyKey("subTitleClass");
  private static final PropertyKey _CIRCULARATTRNAME_KEY = PropertyKey.createPropertyKey("circularAttrName");
  private static final PropertyKey _CIRCULARCLASS_KEY = PropertyKey.createPropertyKey("circularClass");
  private static final PropertyKey _FLATDATAATTRSNAMES_KEY = PropertyKey.createPropertyKey("flatDataAttrsNames");

}
